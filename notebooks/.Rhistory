rename(
state = "Geographic Area Name",
total_population = "Estimate!!SEX AND AGE!!Total population",
pop_age_65 = "Estimate!!SEX AND AGE!!Total population!!65 to 74 years",
pop_age_75 = "Estimate!!SEX AND AGE!!Total population!!75 to 84 years",
pop_age_85 = "Estimate!!SEX AND AGE!!Total population!!85 years and over") %>%
mutate(
pop_age_75_plus = pop_age_75 + pop_age_85,
pop_age_65_plus = pop_age_65 + pop_age_75 + pop_age_85)
# ACS poverty data
ACS_poverty <- fread("../data/raw/ACS/ACSST1Y2019.S1701_2021-03-29T143251/ACSST1Y2019.S1701_data_with_overlays_2021-03-25T140047.csv",skip=1)
poverty <- select(ACS_poverty,
"Geographic Area Name",
"Estimate!!Below poverty level!!Population for whom poverty status is determined!!AGE!!65 years and over",
"Estimate!!Below poverty level!!Population for whom poverty status is determined!!EDUCATIONAL ATTAINMENT!!Population 25 years and over!!Some college, associate's degree",
"Estimate!!Below poverty level!!Population for whom poverty status is determined!!EDUCATIONAL ATTAINMENT!!Population 25 years and over!!Bachelor's degree or higher",
"Estimate!!Percent below poverty level!!Population for whom poverty status is determined",
"Estimate!!Total!!Population for whom poverty status is determined") %>%
rename(
state = "Geographic Area Name",
poverty_65_plus = "Estimate!!Below poverty level!!Population for whom poverty status is determined!!AGE!!65 years and over",
poverty_some_college = "Estimate!!Below poverty level!!Population for whom poverty status is determined!!EDUCATIONAL ATTAINMENT!!Population 25 years and over!!Some college, associate's degree",
poverty_bachelor = "Estimate!!Below poverty level!!Population for whom poverty status is determined!!EDUCATIONAL ATTAINMENT!!Population 25 years and over!!Bachelor's degree or higher",
population_in_poverty = "Estimate!!Total!!Population for whom poverty status is determined",
percent_in_poverty = "Estimate!!Percent below poverty level!!Population for whom poverty status is determined") %>%
mutate(
poverty_higher_edu = poverty_some_college + poverty_bachelor)
# ACS education data
ACS_edu <- fread("../data/raw/ACS/ACSST1Y2019.S1501_2021-03-30T021803/ACSST1Y2019.S1501_data_with_overlays_2021-03-28T203228.csv",skip=1)
education <- select(ACS_edu,
"Geographic Area Name",
"Estimate!!Total!!AGE BY EDUCATIONAL ATTAINMENT!!Population 18 to 24 years!!Some college or associate's degree",
"Estimate!!Total!!AGE BY EDUCATIONAL ATTAINMENT!!Population 18 to 24 years!!Bachelor's degree or higher",
"Estimate!!Total!!AGE BY EDUCATIONAL ATTAINMENT!!Population 25 years and over!!Some college, no degree",
"Estimate!!Total!!AGE BY EDUCATIONAL ATTAINMENT!!Population 25 years and over!!Associate's degree",
"Estimate!!Total!!AGE BY EDUCATIONAL ATTAINMENT!!Population 25 years and over!!Bachelor's degree or higher",
"Estimate!!Total!!AGE BY EDUCATIONAL ATTAINMENT!!Population 65 years and over!!Bachelor's degree or higher",
"Estimate!!Total!!AGE BY EDUCATIONAL ATTAINMENT!!Population 18 to 24 years!!High school graduate (includes equivalency)",
"Estimate!!Total!!AGE BY EDUCATIONAL ATTAINMENT!!Population 25 years and over!!High school graduate (includes equivalency)") %>%
rename(
state = 'Geographic Area Name',
edu_assoc_under_24 = "Estimate!!Total!!AGE BY EDUCATIONAL ATTAINMENT!!Population 18 to 24 years!!Some college or associate's degree",
edu_bachelor_under_24 = "Estimate!!Total!!AGE BY EDUCATIONAL ATTAINMENT!!Population 18 to 24 years!!Bachelor's degree or higher",
edu_nodegree_over_25 = "Estimate!!Total!!AGE BY EDUCATIONAL ATTAINMENT!!Population 25 years and over!!Some college, no degree",
edu_assoc_over_25 = "Estimate!!Total!!AGE BY EDUCATIONAL ATTAINMENT!!Population 25 years and over!!Associate's degree",
edu_bachelor_over_25 = "Estimate!!Total!!AGE BY EDUCATIONAL ATTAINMENT!!Population 25 years and over!!Bachelor's degree or higher",
edu_bachelor_over_65 = "Estimate!!Total!!AGE BY EDUCATIONAL ATTAINMENT!!Population 65 years and over!!Bachelor's degree or higher",
edu_hs_under_24 = "Estimate!!Total!!AGE BY EDUCATIONAL ATTAINMENT!!Population 18 to 24 years!!High school graduate (includes equivalency)",
edu_hs_over_25 = "Estimate!!Total!!AGE BY EDUCATIONAL ATTAINMENT!!Population 25 years and over!!High school graduate (includes equivalency)") %>%
mutate(
edu_higher_edu_18_plus = edu_assoc_under_24 + edu_bachelor_under_24 + edu_nodegree_over_25 + edu_assoc_over_25 + edu_bachelor_over_25,
edu_higher_edu_25_plus = edu_nodegree_over_25 + edu_assoc_over_25 + edu_bachelor_over_25,
edu_hs_18_plus = edu_hs_under_24 + edu_hs_over_25,
edu_hs_or_higher_18_plus = edu_hs_under_24 + edu_hs_over_25 + edu_higher_edu_18_plus,
edu_hs_or_higher_25_plus = edu_hs_over_25 + edu_higher_edu_25_plus)
# ACS housing data
ACS_housing <- fread("../data/raw/ACS/ACSDP1Y2019.DP04_2021-03-30T022519/ACSDP1Y2019.DP04_data_with_overlays_2021-03-29T141407.csv",skip=1)
housing <- select(ACS_housing,
"Geographic Area Name",
"Estimate!!HOUSING OCCUPANCY!!Total housing units",
"Estimate!!OCCUPANTS PER ROOM!!Occupied housing units!!1.00 or less",
"Estimate!!OCCUPANTS PER ROOM!!Occupied housing units!!1.01 to 1.50",
"Estimate!!OCCUPANTS PER ROOM!!Occupied housing units!!1.51 or more") %>%
rename(
state = "Geographic Area Name",
total_housing_units = "Estimate!!HOUSING OCCUPANCY!!Total housing units",
less_than_1person_room = "Estimate!!OCCUPANTS PER ROOM!!Occupied housing units!!1.00 or less",
more_than_1person_room = "Estimate!!OCCUPANTS PER ROOM!!Occupied housing units!!1.01 to 1.50",
more_than_1.5person_room = "Estimate!!OCCUPANTS PER ROOM!!Occupied housing units!!1.51 or more") %>%
mutate(
one_plus_person_room = more_than_1person_room + more_than_1.5person_room )
# ACS internet data
ACS_internet <- fread("../data/raw/ACS/ACSST1Y2019.S2801_2021-04-08T171225/ACSST1Y2019.S2801_data_with_overlays_2021-04-08T171101.csv",skip=1)
internet <- select(ACS_internet,
"Geographic Area Name",
"Estimate!!Total!!Total households",
"Estimate!!Total!!Total households!!TYPES OF COMPUTER!!Has one or more types of computing devices:",
"Estimate!!Total!!Total households!!TYPES OF COMPUTER!!No computer",
"Estimate!!Total!!Total households!!TYPE OF INTERNET SUBSCRIPTIONS!!With an Internet subscription:",
"Estimate!!Total!!Total households!!TYPE OF INTERNET SUBSCRIPTIONS!!Without an Internet subscription") %>%
rename(
state = "Geographic Area Name",
total_households = "Estimate!!Total!!Total households",
with_computer = "Estimate!!Total!!Total households!!TYPES OF COMPUTER!!Has one or more types of computing devices:",
wo_computer = "Estimate!!Total!!Total households!!TYPES OF COMPUTER!!No computer",
with_internet = "Estimate!!Total!!Total households!!TYPE OF INTERNET SUBSCRIPTIONS!!With an Internet subscription:",
wo_internet = "Estimate!!Total!!Total households!!TYPE OF INTERNET SUBSCRIPTIONS!!Without an Internet subscription") %>%
mutate(
wo_computer_pct = wo_computer/total_households,
wo_internet_pct = wo_internet/total_households)
# US Area data
CB_area <- fread("../data/raw/LandArea/State Area Measurements and Internal Point Coordinates.csv")
landarea <- select(CB_area,State,LandArea_Sq.Mi.) %>%
rename(state = State,
landarea = LandArea_Sq.Mi.)
#combine data on covid cases/deaths each day with data on state populations
data_cleaned <- merge(NYT_covid, demographic)
data_cleaned <- merge(data_cleaned,poverty)
data_cleaned <- merge(data_cleaned,education)
data_cleaned <- merge(data_cleaned,housing)
data_cleaned <- merge(data_cleaned,internet)
data_cleaned <- merge(data_cleaned,landarea)
data_cleaned <- data_cleaned %>%
mutate(
casesperlakh = 100000 * cases / total_population,
deathsperlakh = 100000 * deaths / total_population,
pop_den = total_population / landarea,
log_pop_den = log10(pop_den),
house_per_capita = total_housing_units / total_population,
hs_edu_18_plus_percent = edu_hs_18_plus / total_population,
hs_edu_25_plus_percent = edu_hs_over_25 / total_population,
hs_or_higher_18_plus_percent = edu_hs_or_higher_18_plus / total_population,
hs_or_higher_25_plus_percent = edu_hs_or_higher_25_plus / total_population,
higher_edu_18_plus_per_capita = edu_higher_edu_18_plus/total_population,
higher_edu_25_plus_per_capita = edu_higher_edu_25_plus/total_population,
pct_age_65_plus = pop_age_65_plus/total_population,
pct_age_75_plus = pop_age_75_plus/total_population,
pct_age_85_plus = pop_age_85/total_population,
)
write.csv(data_cleaned,"../data/processed/data_cleaned.csv", row.names = FALSE)
data_cleaned_model_selection <- data_cleaned %>% select(
percent_in_poverty,
wo_internet_pct,
deathsperlakh,
pop_den,
log_pop_den,
house_per_capita,
hs_or_higher_25_plus_percent,
higher_edu_18_plus_per_capita,
pct_age_85_plus
)
# Adapted from http://www.sthda.com/english/articles/37-model-selection-essentials-in-r/155-best-subsets-regression-essentials-in-r/#computing-best-subsets-regression
# (but without their use of BIC and CP):
models <- regsubsets(deathsperlakh~., data = data_cleaned_model_selection,force.in = "percent_in_poverty")
summary(models)
res.sum <- summary(models)
Adj.R2 <- which.max(res.sum$adjr2)
print(res.sum$adjr2)
cat('Optimal number of predictors to minimize adjusted R^2:', Adj.R2)
max_num_predictors <- length(res.sum$adjr2)
get_names <- coef(models, 1:sum(lengths(res.sum$adjr2)))
pairs.panels(model.frame(ourmodel))
# loop.vector <- sum(lengths(res.sum$adjr2))
#
# par_list <- list()
#
# for(i in 1:loop.vector){
#   name <- paste('model',i,sep='')
#   tmp <- list(names(get_names[[i]]))
#   tmp <- tmp[[1]][-1]
#  par_list[[name]] <- tmp}
#
#
# par_list
# adapted from http://www.sthda.com/english/articles/37-model-selection-essentials-in-r/155-best-subsets-regression-essentials-in-r/#k-fold-cross-validation :
get_model_formula <- function(id, object, outcome){
# get models data
models <- summary(object)$which[id,-1]
# Get outcome variable
#form <- as.formula(object$call[[2]])
#outcome <- all.vars(form)[1]
# Get model predictors
predictors <- names(which(models == TRUE))
predictors <- paste(predictors, collapse = "+")
# Build model formula
as.formula(paste0(outcome, "~", predictors))
}
outcomevariable <- "deathsperlakh"
model1 <- lm(as.formula(get_model_formula(1, models, outcomevariable)), data = data_cleaned_model_selection)
model2 <- lm(as.formula(get_model_formula(2, models, outcomevariable)), data = data_cleaned_model_selection)
model3 <- lm(as.formula(get_model_formula(3, models, outcomevariable)), data = data_cleaned_model_selection)
model4 <- lm(as.formula(get_model_formula(4, models, outcomevariable)), data = data_cleaned_model_selection)
model5 <- lm(as.formula(get_model_formula(5, models, outcomevariable)), data = data_cleaned_model_selection)
model6 <- lm(as.formula(get_model_formula(6, models, outcomevariable)), data = data_cleaned_model_selection)
if (max_num_predictors >= 7) {
model7 <- lm(as.formula(get_model_formula(7, models, outcomevariable)), data = data_cleaned_model_selection)
}
if (max_num_predictors >= 8) {
model8 <- lm(as.formula(get_model_formula(8, models, outcomevariable)), data = data_cleaned_model_selection)
}
ourmodel <- lm(deathsperlakh~percent_in_poverty+
pop_den+
house_per_capita+
hs_or_higher_25_plus_percent+
pct_age_85_plus,
data=data_cleaned_model_selection)
summary(ourmodel)
pairs.panels(model.frame(ourmodel))
knitr::opts_chunk$set(echo = TRUE)
library("stargazer")
library("data.table")
library("ggplot2")
library("dplyr")
library("lmtest")
library("psych")
library("patchwork")
library("leaps")
library("ggpubr")
# get clean data
data_cleaned <- fread("../data/processed/data_cleaned.csv")
# get data for model selection
data_cleaned_model_selection <- data_cleaned %>% select(
percent_in_poverty,
wo_internet_pct,
deathsperlakh,
pop_den,
log_pop_den,
house_per_capita,
hs_or_higher_25_plus_percent,
higher_edu_18_plus_per_capita,
pct_age_85_plus
)
# plot distribution for variables in interest
par(mfrow = c(2, 2))
lapply(seq(data_cleaned_model_selection), function(x)
hist(x=data_cleaned_model_selection[[x]],
xlab=names(data_cleaned_model_selection)[x],
main=paste("hist", names(data_cleaned_model_selection)[x])))
# plot to explain state selections
knitr::opts_chunk$set(echo = TRUE)
library("stargazer")
library("data.table")
library("ggplot2")
library("dplyr")
library("lmtest")
library("psych")
library("patchwork")
library("leaps")
library("ggpubr")
ourmodel$residuals
summary(ourmodel)
View(ourmodel)
summary(ourmodel)$adj.r.squared
summary(ourmodel)$Residual.Std. Error
summary(ourmodel)$sigma
ourmodel$coefficients
ourmodel$coefficients[5]
ourmodel$coefficients[5][1]
coef(ourmodel)
class(ourmodel$coefficients[5])
knitr::opts_chunk$set(echo = TRUE)
library("stargazer")
library("data.table")
library("ggplot2")
library("dplyr")
library("lmtest")
library("psych")
library("patchwork")
library("leaps")
library("ggpubr")
# get clean data
data_cleaned <- fread("../data/processed/data_cleaned.csv")
# get data for model selection
data_cleaned_model_selection <- data_cleaned %>% select(
percent_in_poverty,
wo_internet_pct,
deathsperlakh,
pop_den,
log_pop_den,
house_per_capita,
hs_or_higher_25_plus_percent,
higher_edu_18_plus_per_capita,
pct_age_85_plus
)
# plot distribution for variables in interest
par(mfrow = c(2, 2))
lapply(seq(data_cleaned_model_selection), function(x)
hist(x=data_cleaned_model_selection[[x]],
xlab=names(data_cleaned_model_selection)[x],
main=paste("Histogram of", names(data_cleaned_model_selection)[x])))
# plot to explain state selections
ggplot(data_cleaned, aes(x=percent_in_poverty, y=deathsperlakh))+
geom_point()+
geom_text(aes(label = state),size=3)+
labs(x = 'Percentage of Total Population in Poverty (2019)',
y = 'Deaths per 100,000 People as of March 26, 2021',
title = 'Poverty and Covid Deaths',
subtitle = 'Data from the 2019 American Community Survey and The New York Times Covid 19 Database',
fontsize = 10)+
theme(
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
plot.title = element_text(size=22))
#ggsave("Poverty_and_Covid_Deaths.png")
ggplot(data_cleaned, aes(x=percent_in_poverty, y=deathsperlakh))+
geom_point()+
geom_text(aes(label = state),size=3)+
labs(x = 'Percentage of Total Population in Poverty (2019)',
y = 'Deaths per 100,000 People as of March 26, 2021',
title = 'Poverty and Covid Deaths',
subtitle = 'Data from the 2019 American Community Survey and The New York Times Covid 19 Database',
fontsize = 10)+
theme(
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
plot.title = element_text(size=22))
ggsave("Poverty_and_Covid_Deaths.png")
knitr::opts_chunk$set(echo = TRUE)
library("stargazer")
library("data.table")
library("ggplot2")
library("dplyr")
library("lmtest")
library("psych")
library("patchwork")
library("leaps")
library("ggpubr")
# get clean data
data_cleaned <- fread("../data/processed/data_cleaned.csv")
# get data for model selection
data_cleaned_model_selection <- data_cleaned %>% select(
percent_in_poverty,
wo_internet_pct,
deathsperlakh,
pop_den,
log_pop_den,
house_per_capita,
hs_or_higher_25_plus_percent,
higher_edu_18_plus_per_capita,
pct_age_85_plus
)
# plot distribution for variables in interest
par(mfrow = c(2, 2))
lapply(seq(data_cleaned_model_selection), function(x)
hist(x=data_cleaned_model_selection[[x]],
xlab=names(data_cleaned_model_selection)[x],
main=paste("Histogram of", names(data_cleaned_model_selection)[x])))
# plot to explain state selections
ggplot(data_cleaned, aes(x=percent_in_poverty, y=deathsperlakh))+
geom_point()+
geom_text(aes(label = state),size=3)+
labs(x = 'Percentage of Total Population in Poverty (2019)',
y = 'Deaths per 100,000 People as of March 26, 2021',
title = 'Poverty and Covid Deaths',
subtitle = 'Data from the 2019 American Community Survey and The New York Times Covid 19 Database',
fontsize = 10)+
theme(
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
plot.title = element_text(size=22))
ggsave("Poverty_and_Covid_Deaths.png")
# get outlier data
pop_and_poverty <- fread("../data/processed/pop_and_poverty.csv")
# Basic barplot
p<-ggplot(data=pop_and_poverty, aes(x=state, y=percent_in_poverty)) +
geom_bar(stat="identity")+labs(title="Percent of Population in Poverty by State/Territory",
x="State/Territory", y = "% of Population Under Poverty Line")
p + coord_flip()
sctr_wo_computer_pct = ggplot(data_cleaned, aes(x=wo_computer_pct, y=percent_in_poverty)) +
geom_point(alpha=1, color="blue", size=2) +
labs(x="Percent w/o Computer", y="Percent in Poverty")
sctr_wo_internet_pct = ggplot(data_cleaned, aes(x=wo_internet_pct, y=percent_in_poverty)) +
geom_point(alpha=1, color="red", size=2) +
labs(x="Percent w/o Internet", y="Percent in Poverty")
sctr_internet_computer = ggplot(data_cleaned, aes(x=wo_computer_pct, y=wo_internet_pct)) +
geom_point(alpha=1, color="purple", size=2) +
labs(x="Percent w/o Computer", y="Percent w/o Internet")
(sctr_wo_computer_pct) | (sctr_wo_internet_pct) | (sctr_internet_computer)
sctr_hs_or_higher = ggplot(data_cleaned, aes(x=hs_or_higher_25_plus_percent, y=percent_in_poverty)) +
geom_point(alpha=1, color="blue", size=2) +
labs(x="Percent of Population (25+) with at Minimum a High School Degree", y="Percent in Poverty")
sctr_higher_edu = ggplot(data_cleaned, aes(x=higher_edu_18_plus_per_capita, y=percent_in_poverty)) +
geom_point(alpha=1, color="red", size=2) +
labs(x="Percent of Population (18+) with at Minimum Some College Experience", y="Percent in Poverty")
(sctr_hs_or_higher) + (sctr_higher_edu)
candidatemodel <- lm(deathsperlakh ~ percent_in_poverty +
wo_internet_pct +
pop_den +
house_per_capita +
hs_or_higher_25_plus_percent +
higher_edu_18_plus_per_capita +
pct_age_85_plus,
data=data_cleaned_model_selection)
pairs.panels(model.frame(candidatemodel))
knitr::opts_chunk$set(echo = TRUE)
library("stargazer")
library("data.table")
library("ggplot2")
library("dplyr")
library("lmtest")
library("psych")
library("patchwork")
library("leaps")
library("ggpubr")
library("forcats")
knitr::opts_chunk$set(echo = TRUE)
library("stargazer")
library("data.table")
library("ggplot2")
library("dplyr")
library("lmtest")
library("psych")
library("patchwork")
library("leaps")
library("ggpubr")
library("forcats")
# get clean data
data_cleaned <- fread("../data/processed/data_cleaned.csv")
# get data for model selection
data_cleaned_model_selection <- data_cleaned %>% select(
percent_in_poverty,
wo_internet_pct,
deathsperlakh,
pop_den,
log_pop_den,
house_per_capita,
hs_or_higher_25_plus_percent,
higher_edu_18_plus_per_capita,
pct_age_85_plus
)
# # plot distribution for variables in interest
# par(mfrow = c(2, 2))
# lapply(seq(data_cleaned_model_selection), function(x)
#   hist(x=data_cleaned_model_selection[[x]],
#        xlab=names(data_cleaned_model_selection)[x],
#        main=paste("Histogram of", names(data_cleaned_model_selection)[x])))
#
#
# # plot to explain state selectionschan
# get outlier data
pop_and_poverty <- fread("../data/processed/pop_and_poverty.csv")
# Basic barplot
p <- ggplot(data=pop_and_poverty, aes(x=state, y=percent_in_poverty)) +
geom_bar(stat="identity") +
labs(x="State/Territory", y = "% of Population Under Poverty Line") +
theme(axis.text.y = element_text(size = 5),
axis.title.x = element_text(size = 9),
axis.title.y = element_text(size = 9))
p + coord_flip()
View(pop_and_poverty)
# Basic barplot
for_barplot <- subset(pop_and_poverty, c(state,percent_in_poverty))
# Basic barplot
for_barplot <- subset(pop_and_poverty, select = c(state,percent_in_poverty))
View(for_barplot)
for_barplot <- subset(pop_and_poverty, select = c(state,percent_in_poverty)) %>%
for_barplot <- transform(state, reorder(state,-percent_in_poverty))
for_barplot <- subset(pop_and_poverty, select = c(state,percent_in_poverty)) %>%
for_barplot <- transform(for_barplot$state, reorder(for_barplot$state,-for_barplot$percent_in_poverty))
for_barplot <- subset(pop_and_poverty, select = c(state,percent_in_poverty))
for_barplot <- transform(for_barplot$state, reorder(for_barplot$state,-for_barplot$percent_in_poverty))
View(for_barplot)
for_barplot <- subset(pop_and_poverty, select = c(state,percent_in_poverty))
for_barplot <- reorder(for_barplot$state,-for_barplot$percent_in_poverty)
View(pop_and_poverty)
for_barplot <- subset(pop_and_poverty, select = c(state,percent_in_poverty)) %>%
reorder(for_barplot$state,-for_barplot$percent_in_poverty)
for_barplot <- subset(pop_and_poverty, select = c(state,percent_in_poverty)) %>%
reorder(state,-percent_in_poverty)
# get outlier data
pop_and_poverty <- fread("../data/processed/pop_and_poverty.csv")
# Basic barplot
for_barplot <- subset(pop_and_poverty, select = c(state,percent_in_poverty)) %>%
mutate(state = fact_reorder(sate,percent_in_poverty)) %>%
ggplot(aes(x=state, y=percent_in_poverty)) +
geom_bar(stat="identity") +
coord_flip() +
labs(x="State/Territory", y = "% of Population Under Poverty Line") +
theme(axis.text.y = element_text(size = 5),
axis.title.x = element_text(size = 9),
axis.title.y = element_text(size = 9))
# get outlier data
pop_and_poverty <- fread("../data/processed/pop_and_poverty.csv")
# Basic barplot
for_barplot <- subset(pop_and_poverty, select = c(state,percent_in_poverty)) %>%
mutate(state = fact_reorder(state,percent_in_poverty)) %>%
ggplot(aes(x=state, y=percent_in_poverty)) +
geom_bar(stat="identity") +
coord_flip() +
labs(x="State/Territory", y = "% of Population Under Poverty Line") +
theme(axis.text.y = element_text(size = 5),
axis.title.x = element_text(size = 9),
axis.title.y = element_text(size = 9))
# get outlier data
pop_and_poverty <- fread("../data/processed/pop_and_poverty.csv")
# Basic barplot
for_barplot <- subset(pop_and_poverty, select = c(state,percent_in_poverty)) %>%
mutate(state = fct_reorder(state,percent_in_poverty)) %>%
ggplot(aes(x=state, y=percent_in_poverty)) +
geom_bar(stat="identity") +
coord_flip() +
labs(x="State/Territory", y = "% of Population Under Poverty Line") +
theme(axis.text.y = element_text(size = 5),
axis.title.x = element_text(size = 9),
axis.title.y = element_text(size = 9))
View(for_barplot)
# get outlier data
pop_and_poverty <- fread("../data/processed/pop_and_poverty.csv")
# Basic barplot
for_barplot <- subset(pop_and_poverty, select = c(state,percent_in_poverty))
for_barplot %>%
mutate(state = fct_reorder(state,percent_in_poverty)) %>%
ggplot(aes(x=state, y=percent_in_poverty)) +
geom_bar(stat="identity") +
coord_flip() +
labs(x="State/Territory", y = "% of Population Under Poverty Line") +
theme(axis.text.y = element_text(size = 5),
axis.title.x = element_text(size = 9),
axis.title.y = element_text(size = 9))
# get outlier data
pop_and_poverty <- fread("../data/processed/pop_and_poverty.csv")
# Basic barplot
for_barplot <- subset(pop_and_poverty, select = c(state,percent_in_poverty))
for_barplot %>%
mutate(state = fct_reorder(state,percent_in_poverty)) %>%
ggplot(aes(x=state, y=percent_in_poverty)) +
geom_bar(stat="identity") +
coord_flip() +
labs(x="State/Territory", y = "% of Population Under Poverty Line") +
theme(axis.text.y = element_text(size = 5),
axis.title.x = element_text(size = 9),
axis.title.y = element_text(size = 9))
